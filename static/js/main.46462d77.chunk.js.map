{"version":3,"sources":["components/MovieCard.js","components/SearchMovies.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","movie","className","src","poster_path","alt","title","release_date","vote_average","overview","SearchMovies","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","console","log","error","onSubmit","htmlFor","type","placeholder","value","onChange","target","filter","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAiBeA,MAff,YAA6B,IAATC,EAAQ,EAARA,MAChB,OACI,sBAAKC,UAAU,OAAf,UACgB,qBAAKA,UAAU,cAAcC,IAAG,0DAAqDF,EAAMG,aAC3FC,IAAKJ,EAAMK,MAAQ,YACnB,sBAAKJ,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMK,QACnC,4BAAG,mDAAsBL,EAAMM,kBAC/B,4BAAG,6CAAgBN,EAAMO,kBACzB,mBAAGN,UAAU,aAAb,SAA2BD,EAAMQ,gBAP3B,aCsCnBC,MAvCf,WAAyB,IAAD,EAEMC,mBAAS,IAFf,mBAEbC,EAFa,KAENC,EAFM,OAGOF,mBAAS,IAHhB,mBAGbG,EAHa,KAGLC,EAHK,KAKdC,EAAY,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAEjBD,EAAEE,iBAEIC,EAJW,kHAIsGR,EAJtG,iDAOKS,MAAMD,GAPX,cAOPE,EAPO,gBAQMA,EAAIC,OARV,OAQPC,EARO,OASbT,EAAUS,EAAKC,SACfC,QAAQC,IAAIb,GAVC,kDAYbY,QAAQE,MAAR,MAZa,0DAAH,sDAgBlB,OACI,qCACI,uBAAM1B,UAAU,OAAO2B,SAAUb,EAAjC,UACI,uBAAOd,UAAU,QAAS4B,QAAQ,QAAlC,wBACA,uBACI5B,UAAU,QAAQ6B,KAAK,OAAOC,YAAY,wBAAwBC,MAAOrB,EAAOsB,SAAU,SAACjB,GAAD,OAAOJ,EAASI,EAAEkB,OAAOF,UAEvH,wBAAQ/B,UAAU,SAAS6B,KAAK,SAAhC,uBAEJ,qBAAK7B,UAAU,YAAf,SACKY,EAAOsB,QAAO,SAAAnC,GAAK,OAAIA,EAAMG,eAAaiC,KAAI,SAAApC,GAAK,OAChD,cAAC,EAAD,CAAWA,MAAOA,GAAW,qBCvBlCqC,MATf,WACE,OACE,sBAAKpC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAAC,EAAD,QCKSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46462d77.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction MovieCard({movie}) {\r\n    return (\r\n        <div className=\"card\" key=\"movie.id\">\r\n                        <img className=\"card--image\" src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`} \r\n                        alt={movie.title + ' poster'}/>\r\n                        <div className=\"card--content\">\r\n                            <h3 className=\"card--title\">{movie.title}</h3>\r\n                            <p><small>RELEASE DATE: {movie.release_date}</small></p>\r\n                            <p><small>RATING: {movie.vote_average}</small></p>\r\n                            <p className=\"card--desc\">{movie.overview}</p>\r\n                        </div>\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import React, {useState} from \"react\";\r\nimport MovieCard from './MovieCard';\r\n\r\nfunction SearchMovies (){\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies]= useState([]);\r\n\r\n    const searchMovies = async(e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=df795042d40e447835ee0b2f5fcbf45e&language=en-US&query=${query}&page=1&include_adult=false`;\r\n\r\n        try {\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            setMovies(data.results);\r\n            console.log(movies);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"form\" onSubmit={searchMovies}>\r\n                <label className=\"label\"  htmlFor=\"query\" >Movie Name</label>\r\n                <input \r\n                    className=\"input\" type=\"text\" placeholder=\"Search for a movie...\" value={query} onChange={(e) => setQuery(e.target.value)} \r\n                />\r\n                <button className=\"button\" type=\"submit\">Search</button>\r\n            </form>\r\n            <div className=\"card-list\">\r\n                {movies.filter(movie => movie.poster_path).map(movie => \r\n                    <MovieCard movie={movie} key=\"movie.id\"/>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchMovies;","import './App.css';\nimport SearchMovies from './components/SearchMovies';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">React Movie Search</h1>\n      <SearchMovies />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}